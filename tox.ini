[tox]
envlist =
    flake8
    pylint
    bandit
    py{36,37,38}-django22-cms{37,38}
    py{36,37,38}-django30-cms{37,38}
    py{36,37,38}-django31-cms38
    jshint
    divio
    readme
    clean

[testenv]
description = Test suite (unit + functional)
deps =
    aldryn-client
    django22: Django>=2.2,<3.0
    django30: Django>=3.0,<3.1
    django31: Django>=3.1,<3.2
    cms37: django-cms>=3.7,<3.8
    cms38: django-cms>=3.8,<3.9
commands =
    python tests/manage.py migrate -v0
    python tests/manage.py cms check
    python tests/manage.py shell -c "import djangocms_maps.models"

[testenv:bandit]
description = PyCQA security linter
deps = bandit
commands = bandit -r --ini tox.ini djangocms_maps/ aldryn_config.py setup.py

[testenv:clean]
description = Remove Python bytecode and other debris
deps = pyclean
changedir = {toxinidir}
commands =
    rm -rf build/ dist/ djangocms_maps.egg-info/ node_modules/ tests/db.sqlite3 tests/db.sqlite3-journal
    pyclean .
whitelist_externals =
    rm

[testenv:flake8]
description = Static code analysis and code style
deps = flake8
commands = flake8

[testenv:jshint]
description = Static code analysis and code style
whitelist_externals =
    jshint
    npm
commands =
    npm install jshint
    {toxinidir}/node_modules/jshint/bin/jshint --show-non-errors djangocms_maps

[testenv:pylint]
description = Check for errors and code smells
deps =
    aldryn-client
    django
    django-cms
    pylint-django
setenv =
    PYTHONPATH={toxinidir}/tests
commands =
    pylint --rcfile tox.ini djangocms_maps setup aldryn_config

[testenv:readme]
description = Ensure README renders on PyPI
deps = twine
commands =
    {envpython} setup.py -q sdist bdist_wheel
    twine check dist/*

[testenv:divio]
description = Divio CLI
deps =
    aldryn-client
    divio-cli
commands = divio {posargs:addon validate}

[travis:env]
DJANGO =
    2.2: django22
    3.0: django30
    3.1: django31
CMS =
    3.7: cms37
    3.8: cms38

[bandit]
exclude = .cache,.git,.tox,build,dist,docs,tests
targets = .

[flake8]
exclude = .cache,.git,.tox,build,dist,djangocms_maps/migrations

[pylint]
[MASTER]
django-settings-module = testproject.settings
load-plugins = pylint_django
output-format = colorized
